version: '3.8'
services:
  mysql:
    image: mysql:8.0
    command:  --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # restart: always
    # network_mode: host
    volumes:
      - ./data/mysql/:/var/lib/mysql/
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      TZ: Asia/Shanghai # 指定时区
      MYSQL_ROOT_PASSWORD: "123456" # 配置root用户密码
      MYSQL_DATABASE: "cool" # 业务库名
      MYSQL_USER: "cool" # 业务库用户名
      MYSQL_PASSWORD: "123123" # 业务库密码
    networks:
      - internal_network  # dddd-share-server 和 warp 在同一个内部网络

  redis:
    image: redis
    # command: --requirepass "12345678" # redis库密码,不需要密码注释本行
    restart: always
    environment:
      TZ: Asia/Shanghai # 指定时区
    volumes:
      - ./data/redis/:/data/
    networks:
      - internal_network  # ddclaude-share-server-server 和 warp 在同一个内部网络

  ddclaude-share-server-server:
    image: lyy0709/dddd-share-server:dev
    restart: always
    ports:
      - 8300:8001
    environment:
      TZ: Asia/Shanghai # 指定时区
      # CHATPROXY: "https://chatproxy.com
      # 内容审核及速率限制
      # AUDIT_LIMIT_URL: "http://auditlimit:8080/audit_limit"
    volumes:
      - ./config.yaml:/app/config.yaml
      - ./data/ddclaude-share-server-server/:/app/data/
      # - ./list.js:/app/resource/public/list.js
      - /proc:/host/proc:ro    # 挂载宿主机的 /proc 目录，只读
      - /sys:/host/sys:ro      # 挂载宿主机的 /sys 目录，只读
    depends_on:
      warp:
        condition: service_healthy  # 只有 warp 的健康检查通过时，ddclaude-share-server-server 才会启动
    networks:
      - internal_network  # ddclaude-share-server-server 和 warp 在同一个内部网络

  warp:
    image: caomingjun/warp
    container_name: warp
    restart: always
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - WARP_SLEEP=5
    cap_add:
      - MKNOD
      - AUDIT_WRITE
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ./warpdata:/var/lib/cloudflare-warp
    networks:
      - internal_network  # 使用内部网络，不对外暴露端口
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "https://www.google.com"]  # 静默模式下请求Google，如果成功返回2xx状态码
      interval: 30s  # 每隔30秒检查一次
      timeout: 10s   # 请求超时10秒
      retries: 3     # 失败3次后标记为不健康
      start_period: 5s  # 容器启动后等待5秒再开始检查

networks:
  internal_network:
    driver: bridge  # 定义一个桥接网络